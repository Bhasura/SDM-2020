{"version":3,"sources":["components/Navbar.jsx","components/Register.jsx","components/UserFunctions.js","pages/Signin.js","pages/Home.js","components/RecordResults.js","components/SearchQuery.jsx","components/DateRadioButtons.jsx","components/DateSlider.jsx","components/EnhancedTableHead.jsx","components/EnhancedTable.jsx","components/SearchForm.jsx","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","style","backgroundColor","background","boxShadow","position","Toolbar","margin","Typography","variant","className","Button","color","component","Link","to","size","styles","input","Register","state","email","username","password","organisation","user_type","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","newUser","axios","post","then","response","console","log","register","res","Container","maxWidth","noValidate","TextField","fullWidth","required","autoComplete","autoFocus","id","label","InputProps","type","Component","Signin","Home","formControl","minWidth","selectEmpty","marginTop","IfTypography","paddingLeft","fontSize","GreenSeer","PlusMinusButton","blockSize","PaperBack","width","SearchQuery","props","Paper","elevation","Grid","container","direction","item","FormControl","InputLabel","Select","labelId","name_of_field","onClick","handleFieldNameChange","MenuItem","selected_value","handleChange","values","map","p","index","key","RadioButtonsGroup","event","newValue","setValue","radioButtonCallback","RadioGroup","row","aria-label","FormControlLabel","control","Radio","Title","withStyles","CustomPaper","CustomSlider","Slider","RadioGrid","ResetButton","RangeSlider","valuetext","callbackFromParent","dateSliderCallback","dataFromRadioButtons","gutterBottom","valueLabelDisplay","aria-labelledby","getAriaValueText","min","max","headCells","numeric","disablePadding","EnhancedTableHead","order","orderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","property","visuallyHidden","paper","marginBottom","table","border","clip","height","overflow","top","descendingComparator","a","b","EnhancedTable","React","useState","rows","setOrder","setOrderBy","selected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","length","TableContainer","Table","numSelected","rowCount","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","url","doi","claims","strength","i","strength_of_evidence","hover","tabIndex","href","rel","author","year","journal","se_practice","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","SearchButton","CancelButton","SearchForm","fillRecords","submitButtonPress","submitButtonPressed","cancelButtonPressed","get","params","from_date","to_date","records","data","catch","err","populateValues","myCallback","datafromDateSlider","onCancel","clearRecords","cancelButtonPress","operators","selected_operator","xs","sm","md","data-testid","Search","themeGreen","createMuiTheme","palette","default","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"4SAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAqCCK,EAjCA,WACb,IAAMC,EAAUV,IAEhB,OACE,kBAACW,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,UACjBC,WAAY,cACZC,UAAW,QAEbC,SAAS,UAET,kBAACC,EAAA,EAAD,CAASL,MAAO,CAAEM,OAAQ,KACxB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWX,EAAQF,OAA5C,QAGA,kBAACc,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAMC,GAAG,WAA5C,UAGA,kBAACJ,EAAA,EAAD,CACEF,QAAQ,WACRG,MAAM,UACNC,UAAWC,IACXC,GAAG,YACHC,KAAK,UALP,qB,mDCpCFC,EAAS,CACbC,MAAO,CACLhB,gBAAiB,UAGAiB,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,UAAW,IAEb,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAVJ,E,qDAaLE,GACPC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,U,+BAEnCL,GACPA,EAAEM,iBC1BkB,SAACC,GACvB,OAAOC,IACJC,KAAK,YAAa,CACjBjB,MAAOe,EAAQf,MACfC,SAAUc,EAAQd,SAClBC,SAAUa,EAAQb,SAClBC,aAAcY,EAAQZ,aACtBC,UAAWW,EAAQX,YAEpBc,MAAK,SAACC,GACLC,QAAQC,IAAI,iBD0BdC,CARgB,CACdtB,MAAOS,KAAKV,MAAMC,MAClBC,SAAUQ,KAAKV,MAAME,SACrBC,SAAUO,KAAKV,MAAMG,SACrBC,aAAcM,KAAKV,MAAMI,aACzBC,UAAWK,KAAKV,MAAMK,YAGNc,MAAK,SAACK,S,+BAMxB,OACE,kBAACC,EAAA,EAAD,CAAWhC,UAAU,OAAOiC,SAAS,MACnC,kBAACtC,EAAA,EAAD,CAAYK,UAAU,KAAKJ,QAAQ,MAAnC,YAGA,0BAAMsC,YAAU,EAACnB,SAAUE,KAAKF,UAC9B,kBAACoB,EAAA,EAAD,CACEC,WAAS,EACTxC,QAAQ,WACRF,OAAO,SACP2C,UAAQ,EACRC,aAAa,QACbC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNrB,KAAK,QACLC,MAAOJ,KAAKV,MAAMC,MAClBK,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP2C,UAAQ,EACRD,WAAS,EACTE,aAAa,WACbC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNrB,KAAK,WACLC,MAAOJ,KAAKV,MAAME,SAClBI,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP2C,UAAQ,EACRD,WAAS,EACTE,aAAa,WACbC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNrB,KAAK,WACLC,MAAOJ,KAAKV,MAAMG,SAClBG,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP0C,WAAS,EACTG,WAAS,EACTC,GAAG,eACHC,MAAM,eACNrB,KAAK,eACLC,MAAOJ,KAAKV,MAAMI,aAClBE,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP0C,WAAS,EACTG,WAAS,EACTC,GAAG,YACHC,MAAM,YACNrB,KAAK,YACLC,MAAOJ,KAAKV,MAAMK,UAClBC,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAACP,EAAA,EAAD,CAAQ6C,KAAK,SAASP,WAAS,EAACxC,QAAQ,YAAYG,MAAM,WAA1D,kB,GA/G4B6C,aEPjBC,E,uKAGb,OACI,kBAAC,EAAD,U,GAJwBD,aCDfE,E,uKAGb,OACI,6BACI,8C,GALkBF,a,kFCWNA,Y,mCCCtBpE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqE,YAAa,CACXrD,OAAQhB,EAAMK,QAAQ,GACtBiE,SAAU,KAEZC,YAAa,CACXC,UAAWxE,EAAMK,QAAQ,IAE3BoE,aAAc,CACZD,UAAWxE,EAAMK,QAAQ,GACzBqE,YAAa1E,EAAMK,QAAQ,GAC3BsE,SAAU,GACVtD,MAAO,WAETuD,UAAW,CACTvD,MAAO,WAETwD,gBAAiB,CACfC,UAAW,IAEbC,UAAW,CACTpE,gBAAiB,UACjBqE,MAAO,SAqEIC,EAjEK,SAACC,GACnB,IAAM1E,EAAUV,IAEhB,OACE,kBAACqF,EAAA,EAAD,CAAOhE,UAAWX,EAAQuE,UAAWK,UAAW,EAAGlE,QAAQ,YACzD,kBAACmE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACxB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACC,EAAA,EAAD,CAAatE,UAAWX,EAAQ6D,aAC9B,kBAACqB,EAAA,EAAD,CACEvE,UAAWX,EAAQoE,UACnBd,GAAG,qCAFL,iBAMA,kBAAC6B,EAAA,EAAD,CACEC,QAAQ,oCACR9B,GAAG,8BACHnB,MAAOuC,EAAMW,eAAiB,GAC9BC,QAASZ,EAAMa,sBACfhC,MAAM,gBACNrB,KAAK,iBAEL,kBAACsD,EAAA,EAAD,CAAUrD,MAAO,eAAjB,eACA,kBAACqD,EAAA,EAAD,CAAUrD,MAAO,cAAjB,gBAIJ,kBAAC8C,EAAA,EAAD,CAAatE,UAAWX,EAAQ6D,aAC9B,kBAACqB,EAAA,EAAD,CACEvE,UAAWX,EAAQoE,UACnBd,GAAG,qCAFL,SAMA,kBAAC6B,EAAA,EAAD,CACEC,QAAQ,oCACR9B,GAAG,8BACHnB,MAAOuC,EAAMe,eACb9D,SAAU+C,EAAMgB,aAChBnC,MAAM,QACNrB,KAAK,kBAEJwC,EAAMiB,OAAOC,KAAI,SAACC,EAAGC,GACpB,OACE,kBAACN,EAAA,EAAD,CAAUO,IAAKD,EAAO3D,MAAO0D,EAAE1D,OAC5B0D,EAAEtC,gB,oCC9EFyC,E,kDACnB,aAAe,IAAD,8BACZ,gBAMFN,aAAe,SAACO,EAAOC,GACrB,EAAKC,SAASD,IARF,EAWdC,SAAW,SAACD,GACV,EAAKlE,SAAS,CAACG,MAAO+D,IAAW,WAC/B,EAAKxB,MAAM0B,oBAAoB,EAAK/E,MAAMc,WAX5C,EAAKd,MAAQ,CACXc,MAAO,KAHG,E,qDAkBZ,OACE,kBAAC0C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACxB,kBAACE,EAAA,EAAD,KACE,kBAACoB,EAAA,EAAD,CACEC,KAAG,EACHC,aAAW,SACXrE,KAAK,UACLC,MAAOJ,KAAKV,MAAMc,MAClBR,SAAUI,KAAK2D,cAEf,kBAACc,EAAA,EAAD,CACErE,MAAM,IACNmB,GAAG,aACHmD,QAAS,kBAACC,EAAA,EAAD,MACTnD,MAAM,iBAER,kBAACiD,EAAA,EAAD,CACErE,MAAM,KACNsE,QAAS,kBAACC,EAAA,EAAD,MACTnD,MAAM,kBAER,kBAACiD,EAAA,EAAD,CACErE,MAAM,KACNsE,QAAS,kBAACC,EAAA,EAAD,MACTnD,MAAM,yB,GA3C2BG,aCHzCiD,EAAQC,YAAW,CACvBnH,KAAO,CACLoB,MAAO,YAFG+F,CAIXnG,KAEGoG,EAAcD,YAAW,CAC7BnH,KAAO,CACLU,gBAAiB,YAFDyG,CAIjBjC,KAEGmC,EAAeF,YAAW,CAC9BnH,KAAO,CACLoB,MAAO,YAFU+F,CAIlBG,KAEGC,EAAYJ,YAAW,CAC3BnH,KAAO,CACLyE,YAAa,MAFC0C,CAIf/B,KAEGoC,GAAcL,YAAW,CAC7BnH,KAAM,CACJU,gBAAiB,UACjBU,MAAO,UAHS+F,CAKjBhG,KAEkBsG,G,kDACnB,aAAe,IAAD,8BACZ,gBAMFC,UAAY,SAAChF,GACX,MAAM,GAAN,OAAUA,IARE,EAWduD,aAAe,SAACO,EAAOC,GACrB,EAAKC,SAASD,IAZF,EAgBdC,SAAW,SAACD,GACV,EAAKlE,SAAS,CAACG,MAAO+D,IAAW,WAC/B,EAAKxB,MAAM0C,mBAAmB,EAAK/F,MAAMc,WAlB/B,EAsBdkF,mBAAqB,SAACC,GACpB,IAAIpB,EAAW,GAEbA,EAD0B,MAAzBoB,EACU,CAAC,KAAM,MACe,OAAzBA,EACG,CAAC,KAAM,MAEP,CAAC,KAAM,MAEpB,EAAKnB,SAASD,GACd,EAAKxB,MAAM0C,mBAAmB,EAAK/F,MAAMc,QA9BzC,EAAKd,MAAQ,CACXc,MAAQ,CAAC,KAAK,OAHJ,E,qDAoCZ,OACE,kBAAC0E,EAAD,CAAajC,UAAW,EAAGlE,QAAQ,YACjC,kBAACmE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,OACxB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAAC2B,EAAD,CACErD,GAAG,eACHiE,cAAY,GAFd,qBAMA,kBAACT,EAAD,CACExD,GAAG,aACHnB,MAAOJ,KAAKV,MAAMc,MAClBR,SAAUI,KAAK2D,aACf8B,kBAAkB,OAClBC,kBAAgB,eAChBC,iBAAkB3F,KAAKoF,UACvBQ,IAAK,KACLC,IAAK,QAGT,kBAACZ,EAAD,CAAWhC,MAAI,GACb,kBAAC,EAAD,CAAkBoB,oBAAqBrE,KAAKsF,sBAE9C,kBAACxC,EAAA,EAAD,CAAMG,MAAI,GACR,kBAACiC,GAAD,0B,GA9D6BvD,a,oCCrBnCmE,GAAY,CAChB,CACEvE,GAAI,QACJwE,SAAS,EACTC,gBAAgB,EAChBxE,MAAO,SAET,CAAED,GAAI,SAAUwE,SAAS,EAAOC,gBAAgB,EAAOxE,MAAO,UAC9D,CAAED,GAAI,OAAQwE,SAAS,EAAOC,gBAAgB,EAAOxE,MAAO,QAC5D,CAAED,GAAI,OAAQwE,SAAS,EAAOC,gBAAgB,EAAOxE,MAAO,QAC5D,CAAED,GAAI,UAAWwE,SAAS,EAAOC,gBAAgB,EAAOxE,MAAO,WAC/D,CACED,GAAI,cACJwE,SAAS,EACTC,gBAAgB,EAChBxE,MAAO,eAET,CAAED,GAAI,SAAUwE,SAAS,EAAOC,gBAAgB,EAAOxE,MAAO,UAC9D,CACED,GAAI,uBACJwE,SAAS,EACTC,gBAAgB,EAChBxE,MAAO,yBAII,SAASyE,GAAkBtD,GAAQ,IACxC1E,EAA2C0E,EAA3C1E,QAASiI,EAAkCvD,EAAlCuD,MAAOC,EAA2BxD,EAA3BwD,QAASC,EAAkBzD,EAAlByD,cAIjC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACGR,GAAUjC,KAAI,SAAC0C,GAAD,OACb,kBAACC,EAAA,EAAD,CACExC,IAAKuC,EAAShF,GACdkF,MAAOF,EAASR,QAAU,QAAU,OACpCW,QAASH,EAASP,eAAiB,OAAS,UAC5CW,cAAeR,IAAYI,EAAShF,IAAK2E,GAEzC,kBAACU,GAAA,EAAD,CACEC,OAAQV,IAAYI,EAAShF,GAC7ByB,UAAWmD,IAAYI,EAAShF,GAAK2E,EAAQ,MAC7C3C,SAhBeuD,EAgBYP,EAAShF,GAhBR,SAAC2C,GACvCkC,EAAclC,EAAO4C,MAiBVP,EAAS/E,MACT2E,IAAYI,EAAShF,GACpB,0BAAM3C,UAAWX,EAAQ8I,gBACZ,SAAVb,EAAmB,oBAAsB,oBAE1C,OAvBU,IAACY,OC3B7B,IAAMvJ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ+E,MAAO,QAETuE,MAAO,CACLvE,MAAO,OACPwE,aAAcxJ,EAAMK,QAAQ,IAE9BoJ,MAAO,CACLnF,SAAU,KAEZgF,eAAgB,CACdI,OAAQ,EACRC,KAAM,gBACNC,OAAQ,EACR5I,QAAS,EACT6I,SAAU,SACVZ,QAAS,EACTnI,SAAU,WACVgJ,IAAK,GACL9E,MAAO,OAIX,SAAS+E,GAAqBC,EAAGC,EAAGvB,GAClC,OAAIuB,EAAEvB,GAAWsB,EAAEtB,IACT,EAENuB,EAAEvB,GAAWsB,EAAEtB,GACV,EAEF,EAmBM,SAASwB,GAAchF,GAAQ,IAAD,EACpBiF,IAAMC,SAAS,IADK,oBACpCC,EADoC,KAErC7J,GAFqC,KAE3BV,MAF2B,EAGjBqK,IAAMC,SAAS,QAHE,oBAGpC3B,EAHoC,KAG7B6B,EAH6B,OAIbH,IAAMC,SAAS,QAJF,oBAIpC1B,EAJoC,KAI3B6B,EAJ2B,OAKXJ,IAAMC,SAAS,IALJ,oBAKpCI,EALoC,aAMnBL,IAAMC,SAAS,IANI,oBAMpCK,EANoC,KAM9BC,EAN8B,OAOjBP,IAAMC,UAAS,GAPE,oBAOpCO,EAPoC,aAQLR,IAAMC,SAAS,IARV,oBAQpCQ,EARoC,KAQvBC,EARuB,KA2BrCC,EACJF,EAAcG,KAAK5C,IAAIyC,EAAaP,EAAKW,OAASP,EAAOG,GAE3D,OACE,yBAAKzJ,UAAWX,EAAQP,MACtB,kBAACkF,EAAA,EAAD,CAAOhE,UAAWX,EAAQ+I,OACxB,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACE/J,UAAWX,EAAQiJ,MACnBxB,kBAAgB,aAChBxG,KAAMkJ,EAAQ,QAAU,SACxB5D,aAAW,kBAEX,kBAACyB,GAAD,CACEhI,QAASA,EACT2K,YAAaX,EAASQ,OACtBvC,MAAOA,EACPC,QAASA,EACTC,cAnCc,SAAClC,EAAO4C,GAEhCiB,EADc5B,IAAYW,GAAsB,QAAVZ,EACrB,OAAS,OAC1B8B,EAAWlB,GACXnG,QAAQC,IAAIkG,GACZnG,QAAQC,IAAIsF,IA+BF2C,SAAUf,EAAKW,SAEjB,kBAACK,EAAA,EAAD,KA1DZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMlF,KAAI,SAACqF,EAAInF,GAAL,MAAe,CAACmF,EAAInF,MAMrD,OALAkF,EAAeE,MAAK,SAAC1B,EAAGC,GACtB,IAAMxB,EAAQ8C,EAAWvB,EAAE,GAAIC,EAAE,IACjC,OAAc,IAAVxB,EAAoBA,EACjBuB,EAAE,GAAKC,EAAE,MAEXuB,EAAepF,KAAI,SAACqF,GAAD,OAAQA,EAAG,MAoDxBE,CAAWzG,EAAMmF,KAjEhC,SAAuB5B,EAAOC,GAC5B,MAAiB,SAAVD,EACH,SAACuB,EAAGC,GAAJ,OAAUF,GAAqBC,EAAGC,EAAGvB,IACrC,SAACsB,EAAGC,GAAJ,OAAWF,GAAqBC,EAAGC,EAAGvB,IA8DNkD,CAAcnD,EAAOC,IAC1CmD,MAAMpB,EAAOG,EAAaH,EAAOG,EAAcA,GAC/CxE,KAAI,SAACU,EAAKR,GAMT,IALA,IAAIwF,EAAM,kBAAoBhF,EAAIiF,IAE9BC,EAAS,GACTC,EAAW,GAENC,EAAI,EAAGA,EAAIpF,EAAIkF,OAAOhB,OAAQkB,IACjCA,IAAMpF,EAAIkF,OAAOhB,OAAS,GAC5BgB,GAAUlF,EAAIkF,OAAOE,GACrBD,GAAYnF,EAAIqF,qBAAqBD,KAErCF,GAAUlF,EAAIkF,OAAOE,GAAK,KAC1BD,GAAYnF,EAAIqF,qBAAqBD,GAAK,MAI9C,OACE,kBAACrD,EAAA,EAAD,CAAUuD,OAAK,EAACC,UAAW,EAAG9F,IAAKO,EAAIxG,OACrC,kBAACyI,EAAA,EAAD,CAAWC,MAAM,QACf,uBAAGsD,KAAMR,EAAKrJ,OAAO,SAAS8J,IAAI,uBAC/BzF,EAAIxG,QAGT,kBAACyI,EAAA,EAAD,CAAWC,MAAM,QAAQlC,EAAI0F,QAC7B,kBAACzD,EAAA,EAAD,CAAWC,MAAM,QAAQlC,EAAI2F,MAC7B,kBAAC1D,EAAA,EAAD,CAAWC,MAAM,QAAQlC,EAAI7C,MAC7B,kBAAC8E,EAAA,EAAD,CAAWC,MAAM,QAAQlC,EAAI4F,SAC7B,kBAAC3D,EAAA,EAAD,CAAWC,MAAM,QAAQlC,EAAI6F,aAC7B,kBAAC5D,EAAA,EAAD,CAAWC,MAAM,QAAQgD,GACzB,kBAACjD,EAAA,EAAD,CAAWC,MAAM,QAAQiD,OAIhCnB,EAAY,GACX,kBAACjC,EAAA,EAAD,CAAUnI,MAAO,CAAEkJ,QAASe,EAAQ,GAAK,IAAMG,IAC7C,kBAAC/B,EAAA,EAAD,CAAW6D,QAAS,QAM9B,kBAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BxL,UAAU,MACVyL,MAAO1C,EAAKW,OACZJ,YAAaA,EACbH,KAAMA,EACNuC,aAhFiB,SAACvG,EAAOwG,GAC/BvC,EAAQuC,IAgFFC,oBA7EwB,SAACzG,GAC/BoE,EAAesC,SAAS1G,EAAMhE,OAAOE,MAAO,KAC5C+H,EAAQ,QChFZ,IAAM0C,GAAehG,YAAW,CAC9BnH,KAAM,CACJU,gBAAiB,UACjBU,MAAO,UAHU+F,CAKlBhG,KACGiM,GAAejG,YAAW,CAC9BnH,KAAM,CACJU,gBAAiB,UACjBU,MAAO,UAHU+F,CAKlBhG,KAEkBkM,G,kDACnB,aAAe,IAAD,8BACZ,gBAkBFjL,SAAW,SAACC,GACVA,EAAEM,iBACF,EAAKsD,aAAa5D,GAClB,EAAKiL,cACL,EAAKC,qBAvBO,EA0BdA,kBAAoB,WAClB,EAAKhL,SAAS,CACZiL,qBAAqB,EACrBC,qBAAqB,KA7BX,EAiCdH,YAAc,WACZ,OAAOzK,IACJ6K,IAAI,WAAY,CACfC,OAAQ,CACNjB,YAAa,EAAK9K,MAAMoE,eACxB4H,UAAW,EAAKhM,MAAMgM,UACtBC,QAAS,EAAKjM,MAAMiM,QACpB9B,OAAQ,EAAKnK,MAAMoE,kBAGtBjD,MAAK,SAACK,GACL,EAAKb,SAAS,CACZuL,QAAS1K,EAAI2K,UAGhBC,OAAM,SAACC,GAAD,OAAShL,QAAQC,IAAI+K,OAhDlB,EA6FdnI,sBAAwB,SAACzD,GACvB,EAAKE,SAAL,eACKF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAC5B,kBAAM,EAAKwL,qBAhGD,EAoGdC,WAAa,SAACC,GACZ,EAAK7L,SAAS,CAAEqL,UAAWQ,EAAmB,KAAM,WAClDnL,QAAQC,IAAIkL,EAAmB,OAEjC,EAAK7L,SAAS,CAAEsL,QAASO,EAAmB,MAxGhC,EA2GdC,SAAW,SAAChM,GACV,EAAKiM,eACL,EAAKC,qBA7GO,EAgHdD,aAAe,WACb,OAAO,EAAK/L,SAAS,CAAEuL,QAAS,MAjHpB,EAoHdS,kBAAoB,WAClB,EAAKhM,SAAS,CACZkL,qBAAqB,EACrBD,qBAAqB,KArHvB,EAAK5L,MAAQ,CACX8K,YAAa,GACb8B,UAAW,GACXtI,OAAQ,GACRF,eAAgB,GAChByI,kBAAmB,GACnB7I,cAAe,GACfgI,UAAW,KACXC,QAAS,KACT9B,OAAQ,GACR+B,QAAS,GACTL,qBAAqB,EACrBD,qBAAqB,GAEvB,EAAKvH,aAAe,EAAKA,aAAa9D,KAAlB,gBAhBR,E,6DAoDqB,gBAA7BG,KAAKV,MAAMgE,eACbtD,KAAKC,SAAS,CACZ2D,OAAQ,CACN,CACEpC,MAAO,MACPpB,MAAO,OAET,CACEoB,MAAO,QACPpB,MAAO,YAKkB,eAA7BJ,KAAKV,MAAMgE,eAObtD,KAAKC,SAAS,CACZ2D,OAAQ,CACN,CACEpC,MAAO,wBACPpB,MAAO,yBAET,CACEoB,MAAO,2BACPpB,MAAO,iC,mCAQJL,GACXC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,U,+BAkC1C,OACE,yBAAKjC,MAAO,CAAEuI,QAAS,MACrB,kBAAC5D,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASlF,QAAS,GAC1C,kBAACgF,EAAA,EAAD,CAAMG,MAAI,EAACF,WAAS,GAClB,kBAACD,EAAA,EAAD,CAAMG,MAAI,EAACmJ,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC7B,kBAACxJ,EAAA,EAAD,CAAMG,MAAI,EAACmJ,GAAI,EAAGC,GAAI,IACtB,kBAACvJ,EAAA,EAAD,CAAMG,MAAI,EAACmJ,GAAI,GAAIC,GAAI,GACrB,0BAAMpL,YAAU,EAACnB,SAAUE,KAAKF,UAC9B,kBAAC,EAAD,CACE8D,OAAQ5D,KAAKV,MAAMsE,OACnBF,eAAgB1D,KAAKV,MAAMoE,eAC3BJ,cAAetD,KAAKV,MAAMgE,cAC1BK,aAAc3D,KAAK2D,aACnBH,sBAAuBxD,KAAKwD,wBAE9B,kBAAC,GAAD,CACE6B,mBAAoBrF,KAAK6L,WACzBP,UAAWtL,KAAKV,MAAMgM,UACtBC,QAASvL,KAAKV,MAAMiM,UAEtB,kBAACzI,EAAA,EAAD,CAAMG,MAAI,EAACmJ,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAC7B,kBAACzB,GAAD,CAAcnJ,KAAK,SAAS/C,QAAQ,aAApC,WAIF,kBAACmE,EAAA,EAAD,CAAMG,MAAI,GACR,kBAAC6H,GAAD,CACEyB,cAAY,UACZ7K,KAAK,SACL/C,QAAQ,YACR4E,QAASvD,KAAK+L,SACdnN,UAAU,iBALZ,WAWJ,kBAACkE,EAAA,EAAD,CAAMG,MAAI,EAACmJ,GAAI,EAAGC,GAAI,MAIzBrM,KAAKV,MAAM4L,sBAAwBlL,KAAKV,MAAM6L,qBAE7C,kBAACxD,GAAD,CAAeG,KAAM9H,KAAKV,MAAMkM,e,GAxKF7J,aCnBnB6K,G,uKAGb,OACI,kBAAC,GAAD,U,GAJwB7K,a,6BCS9B8K,GAAaC,aAAe,CAChCC,QAAS,CACPtO,WAAY,CACVuO,QAAS,cAyBAC,G,uKAlBX,OACE,kBAAC,KAAD,CAAkBpP,MAAOgP,IACvB,kBAACK,GAAA,EAAD,MACA,kBAAC,IAAD,KACE,yBAAKlO,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOmO,OAAK,EAACC,KAAK,IAAIjO,UAAW8C,IACjC,yBAAKjD,UAAU,aACb,kBAAC,IAAD,CAAOmO,OAAK,EAACC,KAAK,UAAUjO,UAAWyN,KACvC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,YAAYjO,UAAW6C,Y,GAXrCD,aCREsL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpN,MAAK,SAAAqN,GACJA,EAAaC,gBAEdrC,OAAM,SAAAsC,GACLrN,QAAQqN,MAAMA,EAAMC,c","file":"static/js/main.0ffcb966.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: \"#52b788\",\n        background: \"transparent\",\n        boxShadow: \"none\",\n      }}\n      position=\"static\"\n    >\n      <Toolbar style={{ margin: 10 }}>\n        <Typography variant=\"h6\" className={classes.title}>\n          SEER\n        </Typography>\n        <Button color=\"inherit\" component={Link} to=\"/search\">\n          Search\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          component={Link}\n          to=\"/register\"\n          size=\"medium\"\n        >\n          Login/Register\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { register } from \"./UserFunctions\";\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\n\nconst styles = {\n  input: {\n    backgroundColor: \"white\",\n  },\n};\nexport default class Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      organisation: \"\",\n      user_type: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      organisation: this.state.organisation,\n      user_type: this.state.user_type,\n    };\n\n    register(newUser).then((res) => {\n      //this.props.history.push(`/register`) //register instead of login because login hasn't been developed yet\n    });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form noValidate onSubmit={this.onSubmit}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            autoComplete=\"email\"\n            autoFocus\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            autoComplete=\"username\"\n            autoFocus\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            autoComplete=\"password\"\n            autoFocus\n            id=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            autoFocus\n            id=\"organisation\"\n            label=\"Organisation\"\n            name=\"organisation\"\n            value={this.state.organisation}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            autoFocus\n            id=\"user_type\"\n            label=\"User Type\"\n            name=\"user_type\"\n            value={this.state.user_type}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n            Register\n          </Button>\n        </form>\n      </Container>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport const register = (newUser) => {\n  return axios\n    .post(\"/register\", {\n      email: newUser.email,\n      username: newUser.username,\n      password: newUser.password,\n      organisation: newUser.organisation,\n      user_type: newUser.user_type,\n    })\n    .then((response) => {\n      console.log(\"Registered\");\n    });\n};\n","import React, {Component} from 'react';\nimport Register from '../components/Register';\n\nexport default class Signin extends Component {\n\n    render () {\n        return (\n            <Register/>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n\n    render () {\n        return (\n            <div>\n                <h3>Home Page</h3>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\n\nclass RecordResults extends Component {\n  render() {\n    let recordListContent;\n    const { records } = this.props;\n    console.log(records);\n    if (records) {\n      recordListContent = (\n        <Grid container direction=\"column\" spacing={3}>\n          <TableContainer component={Paper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">Title</TableCell>\n                  <TableCell align=\"left\">Author</TableCell>\n                  <TableCell align=\"left\">Year</TableCell>\n                  <TableCell align=\"left\">Type</TableCell>\n                  <TableCell align=\"left\">Journal</TableCell>\n                  <TableCell align=\"left\">SE Practice</TableCell>\n                  <TableCell align=\"left\">Claims</TableCell>\n                  <TableCell align=\"left\">Strength of Evidence</TableCell>\n                  <TableCell align=\"left\">DOI</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {records.map((p, index) => {\n                  var url = \"http://doi.org/\" + p.doi;\n\n                  var claims = \"\";\n                  var strength = \"\";\n\n                  for (var i = 0; i < p.claims.length; i++) {\n                    if (i === p.claims.length - 1) {\n                      claims += p.claims[i];\n                      strength += p.strength_of_evidence[i];\n                    } else {\n                      claims += p.claims[i] + \", \";\n                      strength += p.strength_of_evidence[i] + \", \";\n                    }\n                  }\n\n                  return (\n                    <TableRow key={index}>\n                      <TableCell align=\"left\">{p.title}</TableCell>\n                      <TableCell align=\"left\">{p.author}</TableCell>\n                      <TableCell align=\"left\">{p.year}</TableCell>\n                      <TableCell align=\"left\">{p.type}</TableCell>\n                      <TableCell align=\"left\">{p.journal}</TableCell>\n                      <TableCell align=\"left\">{p.se_practice}</TableCell>\n                      <TableCell align=\"left\">{claims}</TableCell>\n                      <TableCell align=\"left\">{strength}</TableCell>\n                      <TableCell align=\"left\">\n                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          {p.doi}\n                        </a>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      );\n    } else {\n      recordListContent = null;\n    }\n    console.log(recordListContent);\n    return <div>{recordListContent}</div>;\n  }\n}\nRecordResults.propTypes = {\n  records: PropTypes.array.isRequired,\n};\nexport default RecordResults;\n","import React from \"react\";\nimport {\n  Select,\n  MenuItem,\n  Paper,\n  Grid,\n  FormControl,\n  InputLabel,\n  //IconButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\n// import RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  IfTypography: {\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(6),\n    fontSize: 25,\n    color: \"#52B788\",\n  },\n  GreenSeer: {\n    color: \"#52B788\",\n  },\n  PlusMinusButton: {\n    blockSize: 50,\n  },\n  PaperBack: {\n    backgroundColor: \"#D8F3DC\",\n    width: 600,\n  },\n}));\n\nconst SearchQuery = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.PaperBack} elevation={7} variant=\"outlined\">\n      <Grid container direction=\"row\">\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <InputLabel\n              className={classes.GreenSeer}\n              id=\"demo-simple-select-outlined-label\"\n            >\n              Name of Field\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={props.name_of_field || \"\"}\n              onClick={props.handleFieldNameChange}\n              label=\"Name of Field\"\n              name=\"name_of_field\"\n            >\n              <MenuItem value={\"SE Practice\"}>SE Practice</MenuItem>\n              <MenuItem value={\"TDD Claims\"}>TDD Claims</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel\n              className={classes.GreenSeer}\n              id=\"demo-simple-select-outlined-label\"\n            >\n              Value\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={props.selected_value}\n              onChange={props.handleChange}\n              label=\"Value\"\n              name=\"selected_value\"\n            >\n              {props.values.map((p, index) => {\n                return (\n                  <MenuItem key={index} value={p.value}>\n                    {p.label}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          {/* <IconButton className={classes.PlusMinusButton} aria-label=\"add\">\n            <AddCircleOutlineIcon />\n          </IconButton>\n\n          <IconButton className={classes.PlusMinusButton} aria-label=\"remove\">\n            <RemoveCircleOutlineIcon />\n          </IconButton> */}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default SearchQuery;\n","import React, {Component} from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default class RadioButtonsGroup extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value: \"5\"\n    };\n  }\n\n  handleChange = (event, newValue) => {\n    this.setValue(newValue);\n  };\n\n  setValue = (newValue) => {\n    this.setState({value: newValue}, () => {\n      this.props.radioButtonCallback(this.state.value);\n    }); \n  }\n\n  render() {\n    return (\n      <Grid container direction=\"row\">\n        <FormControl>\n          <RadioGroup\n            row\n            aria-label=\"gender\"\n            name=\"gender1\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          >\n            <FormControlLabel\n              value=\"5\"\n              id=\"last5Years\"\n              control={<Radio />}\n              label=\"Last 5 years\"\n            />\n            <FormControlLabel\n              value=\"10\"\n              control={<Radio />}\n              label=\"Last 10 years\"\n            />\n            <FormControlLabel\n              value=\"15\"\n              control={<Radio />}\n              label=\"Last 15 years\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n    );\n  }\n  \n}\n","import React, {Component} from \"react\";\nimport { Typography, Slider, Paper, Grid, withStyles, Button } from \"@material-ui/core\";\nimport DateRadioButtons from \"./DateRadioButtons\";\n\nconst Title = withStyles({\n  root : {\n    color: \"#52B788\",\n  },\n})(Typography)\n\nconst CustomPaper = withStyles({\n  root : {\n    backgroundColor: \"#D8F3DC\",\n  },\n})(Paper)\n\nconst CustomSlider = withStyles({\n  root : {\n    color: \"#52B788\",\n  },\n})(Slider)\n\nconst RadioGrid = withStyles({\n  root : {\n    paddingLeft: 100\n  },\n})(Grid)\n\nconst ResetButton = withStyles({\n  root: {\n    backgroundColor: \"#40916C\",\n    color: \"white\",\n  },\n})(Button);\n\nexport default class RangeSlider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      value : [2015,2020]\n    };\n  }\n\n  valuetext = (value) =>{\n    return `${value}`;\n  }\n\n  handleChange = (event, newValue) => {\n    this.setValue(newValue);\n    \n  };\n\n  setValue = (newValue) => {\n    this.setState({value: newValue}, () => {\n      this.props.callbackFromParent(this.state.value);\n    });\n  }\n\n  dateSliderCallback = (dataFromRadioButtons) => {\n    let newValue = [];\n    if(dataFromRadioButtons === \"5\") {\n      newValue = [2015, 2020];\n    } else if(dataFromRadioButtons === \"10\") {\n      newValue = [2010, 2020];\n    } else {\n      newValue = [2005, 2020];\n    }; \n    this.setValue(newValue)\n    this.props.callbackFromParent(this.state.value);\n  }\n\n  render() {\n    return (\n      <CustomPaper elevation={7} variant=\"outlined\" >\n        <Grid container direction=\"row\">\n          <Grid item>\n            <Title\n              id=\"range-slider\"\n              gutterBottom\n            >\n              Select Date Range\n            </Title>\n            <CustomSlider\n              id=\"sliderTest\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              valueLabelDisplay=\"auto\"\n              aria-labelledby=\"range-slider\"\n              getAriaValueText={this.valuetext}\n              min={1990}\n              max={2020}\n            />\n          </Grid>\n          <RadioGrid item >\n            <DateRadioButtons radioButtonCallback={this.dateSliderCallback}/>\n          </RadioGrid>\n          <Grid item >\n            <ResetButton>Reset Date</ResetButton>\n          </Grid>\n        </Grid>\n      </CustomPaper>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst headCells = [\n  {\n    id: \"title\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Title\",\n  },\n  { id: \"author\", numeric: false, disablePadding: false, label: \"Author\" },\n  { id: \"year\", numeric: false, disablePadding: false, label: \"Year\" },\n  { id: \"type\", numeric: false, disablePadding: false, label: \"Type\" },\n  { id: \"journal\", numeric: false, disablePadding: false, label: \"Journal\" },\n  {\n    id: \"se_practice\",\n    numeric: false,\n    disablePadding: false,\n    label: \"SE Practice\",\n  },\n  { id: \"claims\", numeric: false, disablePadding: false, label: \"Claims\" },\n  {\n    id: \"strength_of_evidence\",\n    numeric: false,\n    disablePadding: false,\n    label: \"Strength of Evidence\",\n  },\n];\n\nexport default function EnhancedTableHead(props) {\n  const { classes, order, orderBy, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function EnhancedTable(props) {\n  const [rows, setRow] = React.useState([]);\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"year\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n    console.log(property);\n    console.log(order);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(props.rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  var url = \"http://doi.org/\" + row.doi;\n\n                  var claims = \"\";\n                  var strength = \"\";\n\n                  for (var i = 0; i < row.claims.length; i++) {\n                    if (i === row.claims.length - 1) {\n                      claims += row.claims[i];\n                      strength += row.strength_of_evidence[i];\n                    } else {\n                      claims += row.claims[i] + \", \";\n                      strength += row.strength_of_evidence[i] + \", \";\n                    }\n                  }\n\n                  return (\n                    <TableRow hover tabIndex={-1} key={row.title}>\n                      <TableCell align=\"left\">\n                        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n                          {row.title}\n                        </a>\n                      </TableCell>\n                      <TableCell align=\"left\">{row.author}</TableCell>\n                      <TableCell align=\"left\">{row.year}</TableCell>\n                      <TableCell align=\"left\">{row.type}</TableCell>\n                      <TableCell align=\"left\">{row.journal}</TableCell>\n                      <TableCell align=\"left\">{row.se_practice}</TableCell>\n                      <TableCell align=\"left\">{claims}</TableCell>\n                      <TableCell align=\"left\">{strength}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { Grid, Button, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport RecordResults from \"../components/RecordResults\";\nimport SearchQuery from \"./SearchQuery\";\nimport DateSlider from \"./DateSlider\";\nimport EnhancedTable from \"./EnhancedTable\";\n\nconst SearchButton = withStyles({\n  root: {\n    backgroundColor: \"#2D6A4F\",\n    color: \"white\",\n  },\n})(Button);\nconst CancelButton = withStyles({\n  root: {\n    backgroundColor: \"#40916C\",\n    color: \"white\",\n  },\n})(Button);\n\nexport default class SearchForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      se_practice: \"\",\n      operators: [],\n      values: [],\n      selected_value: \"\",\n      selected_operator: \"\",\n      name_of_field: \"\",\n      from_date: 2015,\n      to_date: 2020,\n      claims: \"\",\n      records: [],\n      cancelButtonPressed: false,\n      submitButtonPressed: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.handleChange(e);\n    this.fillRecords();\n    this.submitButtonPress();\n  };\n\n  submitButtonPress = () => {\n    this.setState({\n      submitButtonPressed: true,\n      cancelButtonPressed: false,\n    });\n  };\n\n  fillRecords = () => {\n    return axios\n      .get(\"/records\", {\n        params: {\n          se_practice: this.state.selected_value,\n          from_date: this.state.from_date,\n          to_date: this.state.to_date,\n          claims: this.state.selected_value,\n        },\n      })\n      .then((res) => {\n        this.setState({\n          records: res.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  populateValues() {\n    if (this.state.name_of_field === \"SE Practice\") {\n      this.setState({\n        values: [\n          {\n            label: \"TDD\",\n            value: \"TDD\",\n          },\n          {\n            label: \"Agile\",\n            value: \"Agile\",\n          },\n        ],\n      });\n    }\n    if (this.state.name_of_field === \"TDD Claims\") {\n      /*       axios\n      .get(\"/record_attributes/tdd_claims\")\n      .then((res) => {\n        this.setState({ values: res.data });\n      })\n      .catch((err) => console.log(err)); */\n      this.setState({\n        values: [\n          {\n            label: \"Improves Code Quality\",\n            value: \"Improves Code Quality\",\n          },\n          {\n            label: \"Improves Team Confidence\",\n            value: \"Improves Team Confidence\",\n          },\n        ],\n      });\n    }\n  }\n\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleFieldNameChange = (e) => {\n    this.setState(\n      { [e.target.name]: e.target.value },\n      () => this.populateValues()\n    );\n  };\n\n  myCallback = (datafromDateSlider) => {\n    this.setState({ from_date: datafromDateSlider[0] }, () => {\n      console.log(datafromDateSlider[0]);\n    });\n    this.setState({ to_date: datafromDateSlider[1] });\n  };\n\n  onCancel = (e) => {\n    this.clearRecords();\n    this.cancelButtonPress();\n  };\n\n  clearRecords = () => {\n    return this.setState({ records: [] });\n  };\n\n  cancelButtonPress = () => {\n    this.setState({\n      cancelButtonPressed: true,\n      submitButtonPressed: false,\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: 100 }}>\n        <Grid container direction=\"column\" spacing={3}>\n          <Grid item container>\n            <Grid item xs={1} sm={2} md={1} />\n            <Grid item xs={1} sm={2} />\n            <Grid item xs={12} sm={8}>\n              <form noValidate onSubmit={this.onSubmit}>\n                <SearchQuery\n                  values={this.state.values}\n                  selected_value={this.state.selected_value}\n                  name_of_field={this.state.name_of_field}\n                  handleChange={this.handleChange}\n                  handleFieldNameChange={this.handleFieldNameChange}\n                />\n                <DateSlider\n                  callbackFromParent={this.myCallback}\n                  from_date={this.state.from_date}\n                  to_date={this.state.to_date}\n                />\n                <Grid item xs={1} sm={2} md={5} />\n                <SearchButton type=\"submit\" variant=\"contained\">\n                  Search\n                </SearchButton>\n              </form>\n              <Grid item>\n                <CancelButton\n                  data-testid=\"testID1\"\n                  type=\"cancel\"\n                  variant=\"contained\"\n                  onClick={this.onCancel}\n                  className=\"cancel_button\"\n                >\n                  Reset\n                </CancelButton>\n              </Grid>\n            </Grid>\n            <Grid item xs={1} sm={2} />\n          </Grid>\n        </Grid>\n\n        {this.state.submitButtonPressed && !this.state.cancelButtonPressed && (\n          //<RecordResults records={this.state.records} />\n          <EnhancedTable rows={this.state.records}/>\n        )}\n      </div>\n    )}\n  }\n","import React, {Component} from 'react';\nimport SearchForm from '../components/SearchForm';\n\nexport default class Search extends Component {\n\n    render () {\n        return (\n            <SearchForm/>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Signin from \"./pages/Signin\";\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/Search\";\nimport {\n  MuiThemeProvider,\n  CssBaseline,\n  createMuiTheme,\n} from \"@material-ui/core\";\n\nconst themeGreen = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#52b788\",\n    },\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={themeGreen}>\n        <CssBaseline />\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Home} />\n            <div className=\"container\">\n              <Route exact path=\"/search\" component={Search} />\n              <Route exact path=\"/register\" component={Signin} />\n            </div>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}