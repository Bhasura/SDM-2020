{"version":3,"sources":["components/Navbar.jsx","components/Register.jsx","components/UserFunctions.js","pages/Signin.js","pages/Home.js","components/RecordResults.js","components/SearchQuery.jsx","components/DateSlider.jsx","components/SearchForm.jsx","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","style","backgroundColor","background","boxShadow","position","Toolbar","margin","Typography","variant","className","Button","color","component","Link","to","size","styles","input","Register","state","email","username","password","organisation","user_type","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","newUser","axios","post","then","response","console","log","register","res","Container","maxWidth","noValidate","TextField","fullWidth","required","autoComplete","autoFocus","id","label","InputProps","type","Component","Signin","Home","RecordResults","recordListContent","records","props","Grid","container","direction","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","p","index","key","author","year","journal","se_practice","claims","doi","formControl","minWidth","selectEmpty","marginTop","IfTypography","paddingLeft","fontSize","GreenSeer","PlusMinusButton","blockSize","PaperBack","width","SearchQuery","elevation","item","xs","sm","FormControl","InputLabel","Select","labelId","name_of_field","onClick","handleFieldNameChange","MenuItem","selected_operator","handleChange","operators","selected_value","values","height","padding","valuetext","RangeSlider","React","useState","from_date","to_date","setValue","dates","gutterBottom","Slider","event","newValue","callbackFromParent","valueLabelDisplay","aria-labelledby","getAriaValueText","min","max","SearchButton","withStyles","CancelButton","SearchForm","get","params","data","catch","err","populateOperator","myCallback","datafromDateSlider","onCancel","populateValues","md","data-testid","length","Search","themeGreen","createMuiTheme","palette","default","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.ec504f6e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      style={{\r\n        backgroundColor: \"#52b788\",\r\n        background: \"transparent\",\r\n        boxShadow: \"none\",\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <Toolbar style={{ margin: 10 }}>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          SEER\r\n        </Typography>\r\n        <Button color=\"inherit\" component={Link} to=\"/search\">\r\n          Search\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"inherit\"\r\n          component={Link}\r\n          to=\"/register\"\r\n          size=\"medium\"\r\n        >\r\n          Login/Register\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { register } from \"./UserFunctions\";\r\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  input: {\r\n    backgroundColor: \"white\",\r\n  },\r\n};\r\nexport default class Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      organisation: \"\",\r\n      user_type: \"\",\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      email: this.state.email,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      organisation: this.state.organisation,\r\n      user_type: this.state.user_type,\r\n    };\r\n\r\n    register(newUser).then((res) => {\r\n      //this.props.history.push(`/register`) //register instead of login because login hasn't been developed yet\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            autoComplete=\"password\"\r\n            autoFocus\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            autoFocus\r\n            id=\"organisation\"\r\n            label=\"Organisation\"\r\n            name=\"organisation\"\r\n            value={this.state.organisation}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            autoFocus\r\n            id=\"user_type\"\r\n            label=\"User Type\"\r\n            name=\"user_type\"\r\n            value={this.state.user_type}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const register = (newUser) => {\r\n  return axios\r\n    .post(\"/register\", {\r\n      email: newUser.email,\r\n      username: newUser.username,\r\n      password: newUser.password,\r\n      organisation: newUser.organisation,\r\n      user_type: newUser.user_type,\r\n    })\r\n    .then((response) => {\r\n      console.log(\"Registered\");\r\n    });\r\n};\r\n","import React, {Component} from 'react';\r\nimport Register from '../components/Register';\r\n\r\nexport default class Signin extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <Register/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Home extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h3>Home Page</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nclass RecordResults extends Component {\r\n  render() {\r\n    let recordListContent;\r\n    const { records } = this.props;\r\n    if (records) {\r\n      recordListContent = (\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <TableContainer component={Paper}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell align=\"right\">Author</TableCell>\r\n                  <TableCell align=\"right\">Year</TableCell>\r\n                  <TableCell align=\"right\">Type</TableCell>\r\n                  <TableCell align=\"right\">Journal</TableCell>\r\n                  <TableCell align=\"right\">SE Practice</TableCell>\r\n                  <TableCell align=\"right\">Claims</TableCell>\r\n                  <TableCell align=\"right\">DOI</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {records.map((p, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell align=\"right\">{p.title}</TableCell>\r\n                      <TableCell align=\"right\">{p.author}</TableCell>\r\n                      <TableCell align=\"right\">{p.year}</TableCell>\r\n                      <TableCell align=\"right\">{p.type}</TableCell>\r\n                      <TableCell align=\"right\">{p.journal}</TableCell>\r\n                      <TableCell align=\"right\">{p.se_practice}</TableCell>\r\n                      <TableCell align=\"right\">{p.claims}</TableCell>\r\n                      <TableCell align=\"right\">{p.doi}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      recordListContent = null;\r\n    }\r\n    console.log(recordListContent);\r\n    return <div>{recordListContent}</div>;\r\n  }\r\n}\r\nRecordResults.propTypes = {\r\n  records: PropTypes.array.isRequired,\r\n};\r\nexport default RecordResults;\r\n","import React from \"react\";\r\nimport {\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  //IconButton,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\n// import RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  IfTypography: {\r\n    marginTop: theme.spacing(2),\r\n    paddingLeft: theme.spacing(6),\r\n    fontSize: 25,\r\n    color: \"#52B788\",\r\n  },\r\n  GreenSeer: {\r\n    color: \"#52B788\",\r\n  },\r\n  PlusMinusButton: {\r\n    blockSize: 50,\r\n  },\r\n  PaperBack: {\r\n    backgroundColor: \"#D8F3DC\",\r\n    width: 600,\r\n  },\r\n}));\r\n\r\nconst SearchQuery = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.PaperBack} elevation={7} variant=\"outlined\">\r\n      <Grid container direction=\"row\">\r\n        <Grid item xs={1} sm={2}>\r\n          <Typography className={classes.IfTypography}>IF</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel\r\n              className={classes.GreenSeer}\r\n              id=\"demo-simple-select-outlined-label\"\r\n            >\r\n              Name of Field\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={props.name_of_field || \"\"}\r\n              onClick={props.handleFieldNameChange}\r\n              label=\"Name of Field\"\r\n              name=\"name_of_field\"\r\n            >\r\n              <MenuItem value={\"SE Practice\"}>SE Practice</MenuItem>\r\n              <MenuItem value={\"TDD Claims\"}>TDD Claims</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel\r\n              className={classes.GreenSeer}\r\n              id=\"demo-simple-select-outlined-label\"\r\n            >\r\n              Operator\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={props.selected_operator}\r\n              onChange={props.handleChange}\r\n              label=\"Operator\"\r\n              name=\"selected_operator\"\r\n            >\r\n              {props.operators.map((p, index) => {\r\n                return (\r\n                  <MenuItem key={index} value={p.value}>\r\n                    {p.label}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl className={classes.formControl}>\r\n            <InputLabel\r\n              className={classes.GreenSeer}\r\n              id=\"demo-simple-select-outlined-label\"\r\n            >\r\n              Value\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={props.selected_value}\r\n              onChange={props.handleChange}\r\n              label=\"Value\"\r\n              name=\"selected_value\"\r\n            >\r\n              {props.values.map((p, index) => {\r\n                return (\r\n                  <MenuItem key={index} value={p.value}>\r\n                    {p.label}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {/* <IconButton className={classes.PlusMinusButton} aria-label=\"add\">\r\n            <AddCircleOutlineIcon />\r\n          </IconButton>\r\n\r\n          <IconButton className={classes.PlusMinusButton} aria-label=\"remove\">\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton> */}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SearchQuery;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography, Slider, Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 200,\r\n    height: 70,\r\n    padding: 10,\r\n    backgroundColor: \"#D8F3DC\",\r\n  },\r\n  GreenSeer: {\r\n    color: \"#52B788\",\r\n  },\r\n}));\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\n\r\nexport default function RangeSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState([props.from_date, props.to_date]);\r\n  let dates = value;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    dates = newValue;\r\n    props.callbackFromParent(dates);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={7} variant=\"outlined\" className={classes.root}>\r\n      <Typography className={classes.GreenSeer} id=\"range-slider\" gutterBottom>\r\n        Select Date Range\r\n      </Typography>\r\n      <Slider\r\n        className={classes.GreenSeer}\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n        min={1990}\r\n        max={2020}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Grid, Button, withStyles } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport RecordResults from \"../components/RecordResults\";\r\nimport SearchQuery from \"./SearchQuery\";\r\nimport DateSlider from \"./DateSlider\";\r\n\r\nconst SearchButton = withStyles({\r\n  root: {\r\n    backgroundColor: \"#2D6A4F\",\r\n    color: \"white\",\r\n  },\r\n})(Button);\r\nconst CancelButton = withStyles({\r\n  root: {\r\n    backgroundColor: \"#40916C\",\r\n    color: \"white\",\r\n  },\r\n})(Button);\r\nexport default class SearchForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      se_practice: \"\",\r\n      operators: [],\r\n      values: [],\r\n      selected_value: \"\",\r\n      selected_operator: \"\",\r\n      name_of_field: \"\",\r\n      from_date: 2015,\r\n      to_date: 2020,\r\n      claims: \"\",\r\n      records: [],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      axios\r\n        .get(\"/records\", {\r\n          params: {\r\n            se_practice: this.state.selected_value,\r\n            from_date: this.state.from_date,\r\n            to_date: this.state.to_date,\r\n            claims: this.state.selected_value,\r\n            selected_operator: this.state.selected_operator,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.setState({ records: res.data });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  };\r\n\r\n  populateValues() {\r\n    if (this.state.name_of_field === \"SE Practice\") {\r\n      this.setState({\r\n        values: [\r\n          {\r\n            label: \"TDD\",\r\n            value: \"TDD\",\r\n          },\r\n          {\r\n            label: \"Agile\",\r\n            value: \"Agile\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n    if (this.state.name_of_field === \"TDD Claims\") {\r\n      /*       axios\r\n      .get(\"/record_attributes/tdd_claims\")\r\n      .then((res) => {\r\n        this.setState({ values: res.data });\r\n      })\r\n      .catch((err) => console.log(err)); */\r\n      this.setState({\r\n        values: [\r\n          {\r\n            label: \"improves code quality\",\r\n            value: \"improves code quality\",\r\n          },\r\n          {\r\n            label: \"improves team confidence\",\r\n            value: \"improves team confidence\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n\r\n  populateOperator() {\r\n    if (\r\n      this.state.name_of_field === \"SE Practice\" ||\r\n      this.state.name_of_field === \"TDD Claims\"\r\n    ) {\r\n      this.setState({\r\n        operators: [\r\n          {\r\n            label: \"Is Equal To\",\r\n            value: \"Is Equal To\",\r\n          },\r\n        ],\r\n      });\r\n      this.populateValues();\r\n    }\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  handleFieldNameChange = (e) => {\r\n    this.setState(\r\n      { [e.target.name]: e.target.value },\r\n      () => this.populateOperator()\r\n      //this.populateValues(),\r\n    );\r\n  };\r\n\r\n  myCallback = (datafromDateSlider) => {\r\n    this.setState({ from_date: datafromDateSlider[0] }, () => {\r\n      console.log(datafromDateSlider[0]);\r\n    });\r\n    this.setState({ to_date: datafromDateSlider[1] });\r\n  };\r\n\r\n  onCancel = (e) => {\r\n    this.setState({ name_of_field: \"\" });\r\n    this.setState({ operators: [] });\r\n    this.setState({ selected_operator: \"\" });\r\n    this.setState({ selected_value: \"\" });\r\n    this.setState({\r\n      values: [\r\n        {\r\n          label: \"\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: 100 }}>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid item container>\r\n            <Grid item xs={1} sm={2} md={1} />\r\n            <Grid item xs={1} sm={2} />\r\n            <Grid item xs={12} sm={8}>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <DateSlider\r\n                  callbackFromParent={this.myCallback}\r\n                  from_date={this.state.from_date}\r\n                  to_date={this.state.to_date}\r\n                />\r\n                <SearchQuery\r\n                  operators={this.state.operators}\r\n                  values={this.state.values}\r\n                  selected_value={this.state.selected_value}\r\n                  selected_operator={this.state.selected_operator}\r\n                  name_of_field={this.state.name_of_field}\r\n                  handleChange={this.handleChange}\r\n                  handleFieldNameChange={this.handleFieldNameChange}\r\n                />\r\n                <Grid item xs={1} sm={2} md={5} />\r\n                <SearchButton type=\"submit\" variant=\"contained\">\r\n                  Search\r\n                </SearchButton>\r\n                <CancelButton\r\n                  data-testid=\"testID1\"\r\n                  type=\"cancel\"\r\n                  variant=\"contained\"\r\n                  onClick={this.onCancel}\r\n                  className=\"cancel_button\"\r\n                >\r\n                  Cancel\r\n                </CancelButton>\r\n              </form>\r\n            </Grid>\r\n            <Grid item xs={1} sm={2} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {this.state.records.length > 0 ? (\r\n          <RecordResults records={this.state.records} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport SearchForm from '../components/SearchForm';\r\n\r\nexport default class Search extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <SearchForm/>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Home from \"./pages/Home\";\r\nimport Search from \"./pages/Search\";\r\nimport {\r\n  MuiThemeProvider,\r\n  CssBaseline,\r\n  createMuiTheme,\r\n} from \"@material-ui/core\";\r\n\r\nconst themeGreen = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#52b788\",\r\n    },\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={themeGreen}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <div className=\"container\">\r\n              <Route exact path=\"/search\" component={Search} />\r\n              <Route exact path=\"/register\" component={Signin} />\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}