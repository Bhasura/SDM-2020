{"version":3,"sources":["components/Navbar.jsx","components/Register.jsx","components/UserFunctions.js","pages/Signin.js","pages/Home.js","components/RecordResults.js","components/SearchQuery.jsx","components/DateRadioButtons.jsx","components/DateSlider.jsx","components/SearchForm.jsx","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","style","backgroundColor","background","boxShadow","position","Toolbar","margin","Typography","variant","className","Button","color","component","Link","to","size","styles","input","Register","state","email","username","password","organisation","user_type","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","newUser","axios","post","then","response","console","log","register","res","Container","maxWidth","noValidate","TextField","fullWidth","required","autoComplete","autoFocus","id","label","InputProps","type","Component","Signin","Home","RecordResults","recordListContent","records","props","Grid","container","direction","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","p","index","url","doi","claims","i","length","key","author","year","journal","se_practice","href","rel","formControl","minWidth","selectEmpty","marginTop","IfTypography","paddingLeft","fontSize","GreenSeer","PlusMinusButton","blockSize","PaperBack","width","SearchQuery","elevation","item","xs","sm","FormControl","InputLabel","Select","labelId","name_of_field","onClick","handleFieldNameChange","MenuItem","selected_operator","handleChange","operators","selected_value","values","RadioButtonsGroup","React","useState","setValue","RadioGroup","row","event","newValue","FormControlLabel","control","Radio","RadioGrid","valuetext","RangeSlider","from_date","to_date","dates","gutterBottom","Slider","callbackFromParent","valueLabelDisplay","aria-labelledby","getAriaValueText","min","max","SearchButton","withStyles","CancelButton","SearchForm","get","params","data","catch","err","populateOperator","myCallback","datafromDateSlider","onCancel","cancelButtonPressed","populateValues","padding","md","data-testid","Search","themeGreen","createMuiTheme","palette","default","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3410e45c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      style={{\n        backgroundColor: \"#52b788\",\n        background: \"transparent\",\n        boxShadow: \"none\",\n      }}\n      position=\"static\"\n    >\n      <Toolbar style={{ margin: 10 }}>\n        <Typography variant=\"h6\" className={classes.title}>\n          SEER\n        </Typography>\n        <Button color=\"inherit\" component={Link} to=\"/search\">\n          Search\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          component={Link}\n          to=\"/register\"\n          size=\"medium\"\n        >\n          Login/Register\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { register } from \"./UserFunctions\";\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\n\nconst styles = {\n  input: {\n    backgroundColor: \"white\",\n  },\n};\nexport default class Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      organisation: \"\",\n      user_type: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newUser = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      organisation: this.state.organisation,\n      user_type: this.state.user_type,\n    };\n\n    register(newUser).then((res) => {\n      //this.props.history.push(`/register`) //register instead of login because login hasn't been developed yet\n    });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form noValidate onSubmit={this.onSubmit}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            autoComplete=\"email\"\n            autoFocus\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            value={this.state.email}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            autoComplete=\"username\"\n            autoFocus\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            autoComplete=\"password\"\n            autoFocus\n            id=\"password\"\n            label=\"Password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            autoFocus\n            id=\"organisation\"\n            label=\"Organisation\"\n            name=\"organisation\"\n            value={this.state.organisation}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            autoFocus\n            id=\"user_type\"\n            label=\"User Type\"\n            name=\"user_type\"\n            value={this.state.user_type}\n            onChange={this.onChange}\n            InputProps={{ style: styles.input }}\n          ></TextField>\n\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\n            Register\n          </Button>\n        </form>\n      </Container>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport const register = (newUser) => {\n  return axios\n    .post(\"/register\", {\n      email: newUser.email,\n      username: newUser.username,\n      password: newUser.password,\n      organisation: newUser.organisation,\n      user_type: newUser.user_type,\n    })\n    .then((response) => {\n      console.log(\"Registered\");\n    });\n};\n","import React, {Component} from 'react';\nimport Register from '../components/Register';\n\nexport default class Signin extends Component {\n\n    render () {\n        return (\n            <Register/>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n\n    render () {\n        return (\n            <div>\n                <h3>Home Page</h3>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\n\nclass RecordResults extends Component {\n  render() {\n    let recordListContent;\n    const { records } = this.props;\n    console.log(records);\n    if (records) {\n      recordListContent = (\n        <Grid container direction=\"column\" spacing={3}>\n          <TableContainer component={Paper}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Title</TableCell>\n                  <TableCell align=\"right\">Author</TableCell>\n                  <TableCell align=\"right\">Year</TableCell>\n                  <TableCell align=\"right\">Type</TableCell>\n                  <TableCell align=\"right\">Journal</TableCell>\n                  <TableCell align=\"right\">SE Practice</TableCell>\n                  <TableCell align=\"right\">Claims</TableCell>\n                  <TableCell align=\"right\">DOI</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {records.map((p, index) => {\n\n                  var url = 'http://doi.org/' + p.doi;\n                  var claims = \"\";\n                  for (var i = 0; i < p.claims.length; i++) {\n                    if (i === p.claims.length - 1) {\n                      claims += p.claims[i];\n                    }\n                    else {\n                      claims += p.claims[i] + \", \";\n                    }\n                  }\n\n                  return (\n                    <TableRow key={index}>\n                  <TableCell align=\"right\">{p.title}</TableCell>\n                  <TableCell align=\"right\">{p.author}</TableCell>\n                  <TableCell align=\"right\">{p.year}</TableCell>\n                  <TableCell align=\"right\">{p.type}</TableCell>\n                  <TableCell align=\"right\">{p.journal}</TableCell>\n                  <TableCell align=\"right\">{p.se_practice}</TableCell>\n                  <TableCell align=\"right\">{claims}</TableCell>\n                  <TableCell align=\"right\"><a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{p.doi}</a></TableCell>\n                </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n      );\n    } else {\n      recordListContent = null;\n    }\n    console.log(recordListContent);\n    return <div>{recordListContent}</div>;\n  }\n}\nRecordResults.propTypes = {\n  records: PropTypes.array.isRequired,\n};\nexport default RecordResults;\n","import React from \"react\";\nimport {\n  Select,\n  MenuItem,\n  Paper,\n  Typography,\n  Grid,\n  FormControl,\n  InputLabel,\n  //IconButton,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\n// import RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  IfTypography: {\n    marginTop: theme.spacing(2),\n    paddingLeft: theme.spacing(6),\n    fontSize: 25,\n    color: \"#52B788\",\n  },\n  GreenSeer: {\n    color: \"#52B788\",\n  },\n  PlusMinusButton: {\n    blockSize: 50,\n  },\n  PaperBack: {\n    backgroundColor: \"#D8F3DC\",\n    width: 600,\n  },\n}));\n\nconst SearchQuery = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.PaperBack} elevation={7} variant=\"outlined\">\n      <Grid container direction=\"row\">\n        <Grid item xs={1} sm={2}>\n          <Typography className={classes.IfTypography}>IF</Typography>\n        </Grid>\n        <Grid item>\n          <FormControl className={classes.formControl}>\n            <InputLabel\n              className={classes.GreenSeer}\n              id=\"demo-simple-select-outlined-label\"\n            >\n              Name of Field\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={props.name_of_field || \"\"}\n              onClick={props.handleFieldNameChange}\n              label=\"Name of Field\"\n              name=\"name_of_field\"\n            >\n              <MenuItem value={\"SE Practice\"}>SE Practice</MenuItem>\n              <MenuItem value={\"TDD Claims\"}>TDD Claims</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel\n              className={classes.GreenSeer}\n              id=\"demo-simple-select-outlined-label\"\n            >\n              Operator\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={props.selected_operator}\n              onChange={props.handleChange}\n              label=\"Operator\"\n              name=\"selected_operator\"\n            >\n              {props.operators.map((p, index) => {\n                return (\n                  <MenuItem key={index} value={p.value}>\n                    {p.label}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel\n              className={classes.GreenSeer}\n              id=\"demo-simple-select-outlined-label\"\n            >\n              Value\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={props.selected_value}\n              onChange={props.handleChange}\n              label=\"Value\"\n              name=\"selected_value\"\n            >\n              {props.values.map((p, index) => {\n                return (\n                  <MenuItem key={index} value={p.value}>\n                    {p.label}\n                  </MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n\n          {/* <IconButton className={classes.PlusMinusButton} aria-label=\"add\">\n            <AddCircleOutlineIcon />\n          </IconButton>\n\n          <IconButton className={classes.PlusMinusButton} aria-label=\"remove\">\n            <RemoveCircleOutlineIcon />\n          </IconButton> */}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default SearchQuery;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function RadioButtonsGroup() {\n  const [value, setValue] = React.useState(\"5\");\n\n  const handleChange = (event) => {\n    let newValue = 0;\n    \n    if(event.target.value === \"5\") {\n      newValue = 2015;\n    }\n    if(event.target.value === \"10\") {\n      newValue = 2010;\n    }\n    if(event.target.value === \"15\") {\n      newValue = 2005;\n    }\n    setValue(newValue);\n  };\n\n  return (\n    <Grid container direction=\"row\">\n      <FormControl>\n        <RadioGroup\n          row\n          aria-label=\"gender\"\n          name=\"gender1\"\n          value={value}\n          onChange={handleChange}\n        >\n          <FormControlLabel\n            value=\"5\"\n            id=\"last5Years\"\n            control={<Radio />}\n            label=\"Last 5 years\"\n          />\n          <FormControlLabel\n            value=\"10\"\n            control={<Radio />}\n            label=\"Last 10 years\"\n          />\n          <FormControlLabel\n            value=\"15\"\n            control={<Radio />}\n            label=\"Last 15 years\"\n          />\n        </RadioGroup>\n      </FormControl>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Slider, Paper, Grid } from \"@material-ui/core\";\nimport DateRadioButtons from \"./DateRadioButtons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#D8F3DC\",\n  },\n  GreenSeer: {\n    color: \"#52B788\",\n  },\n  RadioGrid:{\n    paddingLeft: 100\n  }\n}));\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nexport default function RangeSlider(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState([props.from_date, props.to_date]);\n  let dates = value;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    dates = newValue;\n    props.callbackFromParent(dates);\n  };\n\n  return (\n    <Paper elevation={7} variant=\"outlined\" className={classes.root}>\n      <Grid container direction=\"row\">\n        <Grid item>\n          <Typography\n            className={classes.GreenSeer}\n            id=\"range-slider\"\n            gutterBottom\n          >\n            Select Date Range\n          </Typography>\n          <Slider\n            className={classes.GreenSeer}\n            id=\"sliderTest\"\n            value={value}\n            onChange={handleChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"range-slider\"\n            getAriaValueText={valuetext}\n            min={1990}\n            max={2020}\n          />\n        </Grid>\n        <Grid item className = {classes.RadioGrid}>\n          <DateRadioButtons />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { Component } from \"react\";\nimport { Grid, Button, withStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport RecordResults from \"../components/RecordResults\";\nimport SearchQuery from \"./SearchQuery\";\nimport DateSlider from \"./DateSlider\";\n//import DateRadioButtons from \"./DateRadioButtons\";\n\nconst SearchButton = withStyles({\n  root: {\n    backgroundColor: \"#2D6A4F\",\n    color: \"white\",\n  },\n})(Button);\nconst CancelButton = withStyles({\n  root: {\n    backgroundColor: \"#40916C\",\n    color: \"white\",\n  },\n})(Button);\nexport default class SearchForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      se_practice: \"\",\n      operators: [],\n      values: [],\n      selected_value: \"\",\n      selected_operator: \"\",\n      name_of_field: \"\",\n      from_date: 2015,\n      to_date: 2020,\n      claims: \"\",\n      records: null,\n      cancelButtonPressed: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState({ [e.target.name]: e.target.value }, () => {\n      axios\n        .get(\"/records\", {\n          params: {\n            se_practice: this.state.selected_value,\n            from_date: this.state.from_date,\n            to_date: this.state.to_date,\n            claims: this.state.selected_value,\n            selected_operator: this.state.selected_operator,\n          },\n        })\n        .then((res) => {\n          this.setState({\n            records: res.data,\n          });\n        })\n        .catch((err) => console.log(err));\n    });\n  };\n\n  populateValues() {\n    if (this.state.name_of_field === \"SE Practice\") {\n      this.setState({\n        values: [\n          {\n            label: \"TDD\",\n            value: \"TDD\",\n          },\n          {\n            label: \"Agile\",\n            value: \"Agile\",\n          },\n        ],\n      });\n    }\n    if (this.state.name_of_field === \"TDD Claims\") {\n      /*       axios\n      .get(\"/record_attributes/tdd_claims\")\n      .then((res) => {\n        this.setState({ values: res.data });\n      })\n      .catch((err) => console.log(err)); */\n      this.setState({\n        values: [\n          {\n            label: \"improves code quality\",\n            value: \"improves code quality\",\n          },\n          {\n            label: \"improves team confidence\",\n            value: \"improves team confidence\",\n          },\n        ],\n      });\n    }\n  }\n\n  populateOperator() {\n    if (\n      this.state.name_of_field === \"SE Practice\" ||\n      this.state.name_of_field === \"TDD Claims\"\n    ) {\n      this.setState({\n        operators: [\n          {\n            label: \"Is Equal To\",\n            value: \"Is Equal To\",\n          },\n        ],\n      });\n      this.populateValues();\n    }\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleFieldNameChange = (e) => {\n    this.setState(\n      { [e.target.name]: e.target.value },\n      () => this.populateOperator()\n      //this.populateValues(),\n    );\n  };\n\n  myCallback = (datafromDateSlider) => {\n    this.setState({ from_date: datafromDateSlider[0] }, () => {\n      console.log(datafromDateSlider[0]);\n    });\n    this.setState({ to_date: datafromDateSlider[1] });\n  };\n\n  onCancel = (e) => {\n    this.setState({ cancelButtonPressed: true }, () => {\n      console.log(this.state.cancelButtonPressed);\n    });\n    this.setState({\n      name_of_field: \"\",\n      operators: [],\n      records: null,\n      selected_operator: \"\",\n      selected_value: \"\",\n      cancelButtonPressed: true,\n      values: [\n        {\n          label: \"\",\n          value: \"\",\n        },\n      ],\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ padding: 100 }}>\n        <Grid container direction=\"column\" spacing={3}>\n          <Grid item container>\n            <Grid item xs={1} sm={2} md={1} />\n            <Grid item xs={1} sm={2} />\n            <Grid item xs={12} sm={8}>\n              <form noValidate onSubmit={this.onSubmit}>\n                <SearchQuery\n                  operators={this.state.operators}\n                  values={this.state.values}\n                  selected_value={this.state.selected_value}\n                  selected_operator={this.state.selected_operator}\n                  name_of_field={this.state.name_of_field}\n                  handleChange={this.handleChange}\n                  handleFieldNameChange={this.handleFieldNameChange}\n                />\n                <DateSlider\n                  callbackFromParent={this.myCallback}\n                  from_date={this.state.from_date}\n                  to_date={this.state.to_date}\n                />\n                <Grid item xs={1} sm={2} md={5} />\n                <SearchButton type=\"submit\" variant=\"contained\">\n                  Search\n                </SearchButton>\n                <CancelButton\n                  data-testid=\"testID1\"\n                  type=\"cancel\"\n                  variant=\"contained\"\n                  onClick={this.onCancel}\n                  className=\"cancel_button\"\n                >\n                  Cancel\n                </CancelButton>\n              </form>\n            </Grid>\n            <Grid item xs={1} sm={2} />\n          </Grid>\n        </Grid>\n\n        {!this.state.cancelButtonPressed ? (\n          <RecordResults records={this.state.records} />\n        ) : null}\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport SearchForm from '../components/SearchForm';\n\nexport default class Search extends Component {\n\n    render () {\n        return (\n            <SearchForm/>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Signin from \"./pages/Signin\";\nimport Home from \"./pages/Home\";\nimport Search from \"./pages/Search\";\nimport {\n  MuiThemeProvider,\n  CssBaseline,\n  createMuiTheme,\n} from \"@material-ui/core\";\n\nconst themeGreen = createMuiTheme({\n  palette: {\n    background: {\n      default: \"#52b788\",\n    },\n  },\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={themeGreen}>\n        <CssBaseline />\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Home} />\n            <div className=\"container\">\n              <Route exact path=\"/search\" component={Search} />\n              <Route exact path=\"/register\" component={Signin} />\n            </div>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}