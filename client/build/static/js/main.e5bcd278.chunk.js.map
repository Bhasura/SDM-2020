{"version":3,"sources":["components/Navbar.jsx","components/Register.jsx","components/UserFunctions.js","pages/Signin.js","pages/Home.js","components/RecordResults.js","components/SearchForm.jsx","pages/Search.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","style","backgroundColor","background","boxShadow","position","Toolbar","margin","Typography","variant","className","Button","color","component","Link","to","size","styles","input","Register","state","email","username","password","organisation","user_type","onChange","bind","onSubmit","e","this","setState","target","name","value","preventDefault","newUser","axios","post","then","response","console","log","register","res","Container","maxWidth","noValidate","TextField","fullWidth","required","autoComplete","autoFocus","id","label","InputProps","type","Component","Signin","Home","RecordResults","recordListContent","records","props","Grid","container","direction","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","p","index","key","author","year","journal","se_practice","SearchForm","onTextChange","get","params","search_description","data","catch","err","amount","padding","item","xs","sm","length","Search","themeGreen","createMuiTheme","palette","default","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"sSAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAqCCK,EAjCA,WACb,IAAMC,EAAUV,IAEhB,OACE,kBAACW,EAAA,EAAD,CACEC,MAAO,CACLC,gBAAiB,UACjBC,WAAY,cACZC,UAAW,QAEbC,SAAS,UAET,kBAACC,EAAA,EAAD,CAASL,MAAO,CAAEM,OAAQ,KACxB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWX,EAAQF,OAA5C,QAGA,kBAACc,EAAA,EAAD,CAAQC,MAAM,UAAUC,UAAWC,IAAMC,GAAG,WAA5C,UAGA,kBAACJ,EAAA,EAAD,CACEF,QAAQ,WACRG,MAAM,UACNC,UAAWC,IACXC,GAAG,YACHC,KAAK,UALP,qB,mDCpCFC,EAAS,CACbC,MAAO,CACLhB,gBAAiB,UAGAiB,E,kDACnB,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,UAAW,IAEb,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAVJ,E,qDAaLE,GACPC,KAAKC,SAAL,eAAiBF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,U,+BAEnCL,GACPA,EAAEM,iBC1BkB,SAACC,GACvB,OAAOC,IACJC,KAAK,YAAa,CACjBjB,MAAOe,EAAQf,MACfC,SAAUc,EAAQd,SAClBC,SAAUa,EAAQb,SAClBC,aAAcY,EAAQZ,aACtBC,UAAWW,EAAQX,YAEpBc,MAAK,SAACC,GACLC,QAAQC,IAAI,iBD0BdC,CARgB,CACdtB,MAAOS,KAAKV,MAAMC,MAClBC,SAAUQ,KAAKV,MAAME,SACrBC,SAAUO,KAAKV,MAAMG,SACrBC,aAAcM,KAAKV,MAAMI,aACzBC,UAAWK,KAAKV,MAAMK,YAGNc,MAAK,SAACK,S,+BAMxB,OACE,kBAACC,EAAA,EAAD,CAAWhC,UAAU,OAAOiC,SAAS,MACnC,kBAACtC,EAAA,EAAD,CAAYK,UAAU,KAAKJ,QAAQ,MAAnC,YAGA,0BAAMsC,YAAU,EAACnB,SAAUE,KAAKF,UAC9B,kBAACoB,EAAA,EAAD,CACEC,WAAS,EACTxC,QAAQ,WACRF,OAAO,SACP2C,UAAQ,EACRC,aAAa,QACbC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNrB,KAAK,QACLC,MAAOJ,KAAKV,MAAMC,MAClBK,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP2C,UAAQ,EACRD,WAAS,EACTE,aAAa,WACbC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNrB,KAAK,WACLC,MAAOJ,KAAKV,MAAME,SAClBI,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP2C,UAAQ,EACRD,WAAS,EACTE,aAAa,WACbC,WAAS,EACTC,GAAG,WACHC,MAAM,WACNrB,KAAK,WACLC,MAAOJ,KAAKV,MAAMG,SAClBG,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP0C,WAAS,EACTG,WAAS,EACTC,GAAG,eACHC,MAAM,eACNrB,KAAK,eACLC,MAAOJ,KAAKV,MAAMI,aAClBE,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAAC8B,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP0C,WAAS,EACTG,WAAS,EACTC,GAAG,YACHC,MAAM,YACNrB,KAAK,YACLC,MAAOJ,KAAKV,MAAMK,UAClBC,SAAUI,KAAKJ,SACf6B,WAAY,CAAEtD,MAAOgB,EAAOC,SAG9B,kBAACP,EAAA,EAAD,CAAQ6C,KAAK,SAASP,WAAS,EAACxC,QAAQ,YAAYG,MAAM,WAA1D,kB,GA/G4B6C,aEPjBC,E,uKAGb,OACI,kBAAC,EAAD,U,GAJwBD,aCDfE,E,uKAGb,OACI,6BACI,8C,GALkBF,a,wEC0DnBG,E,uKA7CX,IAAIC,EACIC,EAAYhC,KAAKiC,MAAjBD,QAsCR,OApCED,EADEC,EAEA,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAStE,QAAS,GAC1C,kBAACuE,EAAA,EAAD,CAAgBtD,UAAWuD,KACzB,kBAACC,EAAA,EAAD,CAAOC,cAAY,EAACC,aAAW,gBAC7B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,UACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,QACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,WACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,iBAGJ,kBAACC,EAAA,EAAD,KACGd,EAAQe,KAAI,SAACC,EAAGC,GACf,OACE,kBAACN,EAAA,EAAD,CAAUO,IAAKD,GACb,kBAACL,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAEjF,OAC5B,kBAAC6E,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAEG,QAC5B,kBAACP,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAEI,MAC5B,kBAACR,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAEtB,MAC5B,kBAACkB,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAEK,SAC5B,kBAACT,EAAA,EAAD,CAAWC,MAAM,SAASG,EAAEM,oBAtB1C,KAiCkB,KAEf,6BAAMvB,O,GAzCWJ,aCPtBxC,EAAS,CACbC,MAAO,CACLhB,gBAAiB,UAIAmF,E,kDACnB,aAAe,IAAD,8BACZ,gBAQFC,aAAe,SAACzD,GACd,EAAKE,SAAL,eAAiBF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,QAAS,WACjDG,IACGkD,IAAI,WAAY,CACfC,OAAQ,CACNC,mBAAoB,EAAKrE,MAAMqE,sBAGlClD,MAAK,SAACK,GACL,EAAKb,SAAS,CAAE+B,QAASlB,EAAI8C,UAE9BC,OAAM,SAACC,GAAD,OAASnD,QAAQC,IAAIkD,UAlBhC,EAAKxE,MAAQ,CACXqE,mBAAoB,GACpBI,OAAQ,GACR/B,QAAS,IALC,E,qDA0BZ,OADArB,QAAQC,IAAIZ,KAAKV,MAAM0C,SAErB,yBAAK7D,MAAO,CAAE6F,QAAS,MACrB,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAAStE,QAAS,GAC1C,kBAACoE,EAAA,EAAD,CAAM+B,MAAI,EAAC9B,WAAS,GAClB,kBAACD,EAAA,EAAD,CAAM+B,MAAI,EAACC,GAAI,EAAGC,GAAI,IACtB,kBAACjC,EAAA,EAAD,CAAM+B,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACjD,EAAA,EAAD,CACEvC,QAAQ,WACRF,OAAO,SACP0C,WAAS,EACTG,WAAS,EACTC,GAAG,qBACHC,MAAM,qBACNrB,KAAK,qBACLC,MAAOJ,KAAKV,MAAMqE,mBAClB/D,SAAUI,KAAKwD,aACf/B,WAAY,CAAEtD,MAAOgB,EAAOC,UAGhC,kBAAC8C,EAAA,EAAD,CAAM+B,MAAI,EAACC,GAAI,EAAGC,GAAI,MAIzBnE,KAAKV,MAAM0C,QAAQoC,OAAS,EAC3B,kBAAC,EAAD,CAAepC,QAAShC,KAAKV,MAAM0C,UACjC,U,GApD4BL,aCTnB0C,E,uKAGb,OACI,kBAAC,EAAD,U,GAJwB1C,a,0BCS9B2C,EAAaC,YAAe,CAChCC,QAAS,CACPnG,WAAY,CACVoG,QAAS,cAyBAC,E,uKAlBX,OACE,kBAAC,IAAD,CAAkBjH,MAAO6G,GACvB,kBAACK,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,yBAAK/F,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,IAAI9F,UAAW8C,IACjC,yBAAKjD,UAAU,aACb,kBAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,UAAU9F,UAAWsF,IACvC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,YAAY9F,UAAW6C,Y,GAXrCD,aCREmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjF,MAAK,SAAAkF,GACJA,EAAaC,gBAEd/B,OAAM,SAAAgC,GACLlF,QAAQkF,MAAMA,EAAMC,c","file":"static/js/main.e5bcd278.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      style={{\r\n        backgroundColor: \"#52b788\",\r\n        background: \"transparent\",\r\n        boxShadow: \"none\",\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <Toolbar style={{ margin: 10 }}>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          SEER\r\n        </Typography>\r\n        <Button color=\"inherit\" component={Link} to=\"/search\">\r\n          Search\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"inherit\"\r\n          component={Link}\r\n          to=\"/register\"\r\n          size=\"medium\"\r\n        >\r\n          Login/Register\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { register } from \"./UserFunctions\";\r\nimport { Button, Container, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n  input: {\r\n    backgroundColor: \"white\",\r\n  },\r\n};\r\nexport default class Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      organisation: \"\",\r\n      user_type: \"\",\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      email: this.state.email,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n      organisation: this.state.organisation,\r\n      user_type: this.state.user_type,\r\n    };\r\n\r\n    register(newUser).then((res) => {\r\n      //this.props.history.push(`/register`) //register instead of login because login hasn't been developed yet\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <form noValidate onSubmit={this.onSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            autoComplete=\"password\"\r\n            autoFocus\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            autoFocus\r\n            id=\"organisation\"\r\n            label=\"Organisation\"\r\n            name=\"organisation\"\r\n            value={this.state.organisation}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            autoFocus\r\n            id=\"user_type\"\r\n            label=\"User Type\"\r\n            name=\"user_type\"\r\n            value={this.state.user_type}\r\n            onChange={this.onChange}\r\n            InputProps={{ style: styles.input }}\r\n          ></TextField>\r\n\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const register = (newUser) => {\r\n  return axios\r\n    .post(\"/register\", {\r\n      email: newUser.email,\r\n      username: newUser.username,\r\n      password: newUser.password,\r\n      organisation: newUser.organisation,\r\n      user_type: newUser.user_type,\r\n    })\r\n    .then((response) => {\r\n      console.log(\"Registered\");\r\n    });\r\n};\r\n","import React, {Component} from 'react';\r\nimport Register from '../components/Register';\r\n\r\nexport default class Signin extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <Register/>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Home extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h3>Home Page</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nclass RecordResults extends Component {\r\n  render() {\r\n    let recordListContent;\r\n    const { records } = this.props;\r\n    if (records) {\r\n      recordListContent = (\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <TableContainer component={Paper}>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell align=\"right\">Author</TableCell>\r\n                  <TableCell align=\"right\">Year</TableCell>\r\n                  <TableCell align=\"right\">Type</TableCell>\r\n                  <TableCell align=\"right\">Journal</TableCell>\r\n                  <TableCell align=\"right\">SE Practice</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {records.map((p, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell align=\"right\">{p.title}</TableCell>\r\n                      <TableCell align=\"right\">{p.author}</TableCell>\r\n                      <TableCell align=\"right\">{p.year}</TableCell>\r\n                      <TableCell align=\"right\">{p.type}</TableCell>\r\n                      <TableCell align=\"right\">{p.journal}</TableCell>\r\n                      <TableCell align=\"right\">{p.se_practice}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          )\r\n        </Grid>\r\n      );\r\n    } else {\r\n      recordListContent = null;\r\n    }\r\n    return <div>{recordListContent}</div>;\r\n  }\r\n}\r\nRecordResults.propTypes = {\r\n  records: PropTypes.array.isRequired,\r\n};\r\nexport default RecordResults;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport RecordResults from \"../components/RecordResults\";\r\n\r\nconst styles = {\r\n  input: {\r\n    backgroundColor: \"white\",\r\n  },\r\n};\r\n\r\nexport default class SearchForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      search_description: \"\",\r\n      amount: 15,\r\n      records: [],\r\n    };\r\n  }\r\n\r\n  onTextChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      axios\r\n        .get(\"/records\", {\r\n          params: {\r\n            search_description: this.state.search_description,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          this.setState({ records: res.data });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.records);\r\n    return (\r\n      <div style={{ padding: 150 }}>\r\n        <Grid container direction=\"column\" spacing={3}>\r\n          <Grid item container>\r\n            <Grid item xs={1} sm={2} />\r\n            <Grid item xs={12} sm={8}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                autoFocus\r\n                id=\"search_description\"\r\n                label=\"Search Description\"\r\n                name=\"search_description\"\r\n                value={this.state.search_description}\r\n                onChange={this.onTextChange}\r\n                InputProps={{ style: styles.input }}\r\n              ></TextField>\r\n            </Grid>\r\n            <Grid item xs={1} sm={2} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {this.state.records.length > 0 ? (\r\n          <RecordResults records={this.state.records} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport SearchForm from '../components/SearchForm';\r\n\r\nexport default class Search extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <SearchForm/>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Home from \"./pages/Home\";\r\nimport Search from \"./pages/Search\";\r\nimport {\r\n  MuiThemeProvider,\r\n  CssBaseline,\r\n  createMuiTheme,\r\n} from \"@material-ui/core\";\r\n\r\nconst themeGreen = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: \"#52b788\",\r\n    },\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={themeGreen}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Home} />\r\n            <div className=\"container\">\r\n              <Route exact path=\"/search\" component={Search} />\r\n              <Route exact path=\"/register\" component={Signin} />\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}